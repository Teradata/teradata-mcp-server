test_qltyTools:
  type: prompt
  description: "Test all the qlty MCP tools."
  prompt: |
    You are a Tester who is an expert in testing the functionality of tools in the qlty module. You will test all tools in the module.
    ## your role will work through the phases
    Perform the phases in order, and do not skip any phase.
    
    ## Phase 0 - set up test environment
    - what is your default database?
    - Create a customer table in your default database called test_customer, use the following code CREATE TABLE test_customer (Cust_id INTEGER, Customer_Name VARCHAR(50), Email VARCHAR(100), Phone VARCHAR(20),Registration_Date DATE); A test_customer table should be created.
    - Add 10 rows to the test_customer table. use the following script:`
      INSERT INTO test_customer VALUES (1, 'John Smith', 'john.smith@email.com', '555-0101', DATE '2024-01-15');
      INSERT INTO test_customer VALUES (2, 'Jane Doe', 'jane.doe@email.com', '555-0102', DATE '2024-02-20');
      INSERT INTO test_customer VALUES (3, 'Bob Johnson', 'bob.johnson@email.com', , DATE '2024-03-10');
      INSERT INTO test_customer VALUES (4, 'Alice Brown', 'alice.brown@email.com', '555-0104', DATE '2024-04-05');
      INSERT INTO test_customer VALUES (5, 'Charlie Wilson', 'charlie.wilson@email.com', '555-0105', DATE '2024-05-12');
      INSERT INTO test_customer VALUES (6, 'Diana Davis', 'diana.davis@email.com', '555-0106', DATE '2024-06-18');
      INSERT INTO test_customer VALUES (7, 'Edward Miller', 'edward.miller@email.com', '555-0107', DATE '2024-07-22');
      INSERT INTO test_customer VALUES (8, 'Fiona Garcia', 'fiona.garcia@email.com', '555-0108', DATE '2024-08-03');
      INSERT INTO test_customer VALUES (9, 'George Lee', 'george.lee@email.com', '555-0109', DATE '2024-08-15');
      INSERT INTO test_customer VALUES (-10, 'Helen Taylor', 'helen.taylor@email.com', '555-0110', DATE '2024-08-25');`

    ## Phase 1 - test the missing values tool
    - Use the qlty_missingValues tool to check for missing values in the test_customer table.
    - The tool should return a list of column names with missing values, if no data is returned then fail this test.

    ## Phase 2 - test the negative values tool
    - Use the qlty_negativeValues tool to check for negative values in the test_customer table.
    - The tool should return a list of column names with negative values, if no data is returned then fail this test.

    ## Phase 3 - test the distinct categories tool
    - Use the qlty_distinctCategories tool to get distinct categories in the customer_name column of the test_customer table.
    - The tool should return a list of distinct categories, if no data is returned then fail this test.

    ## Phase 4 - test the standard deviation tool
    - Use the qlty_standardDeviation tool to get the mean and standard deviation for the customer_id column in the test_customer table.
    - The tool should return the mean and standard deviation, if no data is returned then fail this test.

    ## Phase 5 - test the column summary tool
    - Use the qlty_columnSummary tool to get the column summary statistics for the test_customer table.
    - The tool should return the summary statistics for each column in the table, if no data is returned then fail this test. 

    ## Phase 6 - test the univariate statistics tool
    - Use the qlty_univariateStatistics tool to get the univariate statistics for the test_customer table.
    - The tool should return the univariate statistics for each column in the table, if no data is returned then fail this test.

    ## Phase 7 - test the rows with missing values tool
    - Use the qlty_rowsWithMissingValues tool to get rows with missing values in the test_customer table.
    - The tool should return the rows that have missing values in any column, if no data is returned then fail this test.

    ## Phase 8 - Clean up
    - Drop the test_customer table. Use the base_readQuery tool to drop the table. The tool should return a success message.

    ## Communication guidelines:
          - Be concise but informative in your explanations
          - Clearly indicate which phase the process is currently in
          - summarize the success or any failure of the phase before moving to the next phase
    ## Final output guidelines:
          - return in markdown results for all phases as a table including the phase number, description, success or failure status, and a description of the outcome.
          - if a tool does not return any results, then fail that test and indicate it in the outcome.
    ## Example output:
          - | Phase | Description | Status | Outcome |
          - |-------|-------------|--------|---------|
          - | 0     | Set up test environment | Success | Test environment set up successfully |
          - | 1     | Test missing values tool | Success | Missing values tool returned expected results |
          - | 2     | Test negative values tool | Success | Negative values tool returned expected results |
          - | 3     | Test distinct categories tool | Success | Distinct categories tool returned expected results |
          - | 4     | Test standard deviation tool | Success | Standard deviation tool returned expected results |
          - | 5     | Test column summary tool | Success | Column summary tool returned expected results |
          - | 6     | Test univariate statistics tool | Success | Univariate statistics tool returned expected results |
          - | 7     | Test rows with missing values tool | Success | Rows with missing values tool returned expected results |
          - | 8     | Clean up test environment | Success | Test environment cleaned up successfully |


qlty_databaseQuality:
  type: prompt
  description: "Database data quality assessment."
  prompt: |
    # Name:  Database data quality assessment

    # Description: 
    You are a Teradata User who is a data quality expert focused on tables and their use for analytics.

    # Process 
    - You will work through all the phases in order
    - You will complete a phase and pass the outcomes to the subsequent phase
    - You will be assessing the {database_name} database and all the tables in it

    ## Phase 1 - get database tables
    - Get a list of tables in the {database_name} database using the td_base_tableList tool
    - Create a list of database_name.table_name for the next phase

    ## Phase 2 - collect table information
    Cycle through the list of tables, for each table do the following steps in order:
    - Step 1 - using the td_base_tableDDL tool to get the table structure, using the structure generate a business description of the table and all of the columns.
    - Step 2 - using the qlty_columnSummary tool, gather column statistics for the table
    - Step 3 - using the qlty_univariateStatistics tool to get the univariate statistics for a table 
    - Step 4 - using the qlty_rowsWithMissingValues tool to get rows with missing values in a table

    ## Phase 3 - Present results as a dashboard
    - At the beginning of the dashboard identify the database
    - For each table present the results from phase 2 together
    - Ensure that each table is presented the same way
    - Use color to highlight points of interest

    # Communication guidelines
    - Be concise but informative in your explanation
    - Clearly indicate which phase you are currently in and only focus on the activities of the current phase
    - Summarize the outcome of the phase before moving to the next phase

    # Final output
    A professional data quality dashboard that is easily navigable.
  parameters:
    database_name:
      name: database_name
      description: "Name of the database to assess for data quality."
      required: true
      type_hint: str
